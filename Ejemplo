import play.api.libs.json._
import scala.util.{Try, Success, Failure}
import com.github.tototoshi.csv._
import java.io.File

object Main extends App {
  val json: JsValue = Json.parse("""
 {
    "squadName": "Super hero squad",
    "homeTown": "Metro City",
    "formed": 2016,
    "secretBase": "Super tower",
    "active": true,
    "members": [
      {
        "name": "Molecule Man",
        "age": 29,
        "secretIdentity": "Dan Jukes",
        "powers": [
          "Radiation resistance",
          "Turning tiny",
          "Radiation blast"
        ]
      },
      {
        "name": "Madame Uppercut",
        "age": 39,
        "secretIdentity": "Jane Wilson",
        "powers": [
          "Million tonne punch",
          "Damage resistance",
          "Superhuman reflexes"
        ]
      },
      {
        "name": "Eternal Flame",
        "age": 1000000,
        "secretIdentity": "Unknown",
        "powers": [
          "Immortality",
          "Heat Immunity",
          "Teleportation"
        ]
      }
    ]
  }
     """)
  println(Json.stringify(json))

  Try{
    val data = (json \ "squadname").get
    println(data)
  } match {
    case Success(v) =>
    case Failure(e) => println("Elemento no encontrado")
  }
  val nombreEscuador = (json \ "squadName").get
  val lugarOrigen = (json \ "homeTown").get
  val formnacion = (json \ "formed").get
  val baseSecrea = (json \ "secretBase").get
  val actividad = (json \ "active").get
  val miembros = (json \ "members").get
  printf(
        "Nombre del escuadron: %s\n" +
        "Lugar de origen: %s\n" +
        "Fecha de origen: %s\n" +
        "Ubicacion de su base: %s\n" +
        "Activos: %s\n",
    nombreEscuador, lugarOrigen, formnacion, baseSecrea, actividad)
  // println(miembros)
  val x = (0 to 2)
  x.foreach(i => printf("Miembro %s\n" +
    "Nombre: %s\n" +
    "Edad: %s\n" +
    "Identidad secreta: %s\n" +
    "Poderes: \n %s \n %s \n %s \n \n" +
    "",i+1,
    (miembros \ i \ "name").get,
    (miembros \ i \ "age").get,
    (miembros \ i \ "secretIdentity").get,
    (miembros \ i \ "powers" \ 0).get,
    (miembros \ i \ "powers" \ 1).get,
    (miembros \ i \ "powers" \ 2).get
  ))

  println("-------------------")
  val reader = CSVReader.open(new File("C://Users//Kevin//Documents/movie_dataset.csv"))
  val data = reader.allWithHeaders()
  reader.close()

  val production_companies = data.flatMap(elem => (elem.get("production_companies"))).map(Json.parse)
  val nombreCompania = production_companies.flatMap(_ \\ "name" ).map(_.as[String])
  val produccionC = nombreCompania.groupBy(x => x).map(x => (x._1, x._2.length)).toList

  val production_countries = data.flatMap(elem => (elem.get("production_countries"))).map(Json.parse)
  val nombrePais = production_countries.flatMap(_ \\ "name").map(_.as[String])
  val produccionP = nombrePais.groupBy(x => x).map(x => (x._1, x._2.length)).toList

  val spoken_languajes = data.flatMap(elem => (elem.get("spoken_languages"))).map(Json.parse)
  val nombreIdioma = spoken_languajes.flatMap(_ \\ "name").map(_.as[String])
  val idiomaN = nombreIdioma.groupBy(x => x).map(x => (x._1, x._2.length)).toList

  printf("Estudios: \n %s \n ------", produccionC)
  printf("Paises: \n %s \n ------", produccionP)
  printf("Idioma: \n %s \n ------", idiomaN)

}

dependencia: libraryDependencies += "com.typesafe.play" %% "play-json" % "2.9.3"
libraryDependencies += "com.github.tototoshi" %% "scala-csv" % "1.3.10"
