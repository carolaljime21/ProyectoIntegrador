import play.api.libs.json._
import scala.util.{Failure, Success, Try}
import com.github.tototoshi.csv._
import java.io.File
import requests.Response
import scalikejdbc._
import GenerarSQL.escapeMysql

object Cast extends App {
  val reader = CSVReader.open(new File("src/movie_dataset.csv"))
  val data = reader.allWithHeaders()
  reader.close()

  def actorsNames(dataRaw: String): Option[String] = {
    val response: Response = requests
      .post("http://api.meaningcloud.com/topics-2.0",
        data = Map("key" -> "78bbf65e7c69ccc9771d31c9ce27fc8b",
          "lang" -> "en",
          "txt" -> dataRaw,
          "tt" -> "e"),
        headers = Map("content-type" -> "application/x-www-form-urlencoded"))
    Thread.sleep(500)
    if (response.statusCode == 200) {
      Option(response.text)
    } else
      Option.empty
  }

  def transform(jsValue : JsValue): List[String] =
    jsValue("entity_list").as[JsArray].value
    .map (_("form"))
    .map (_.as[String])
      .map(x => escapeMysql(x))
    .toList


  val castId = data
    .map(row => (row("id"), row("cast")))
    .filter(_._2.nonEmpty)
    .map(tuple2 => (tuple2._1, StringContext.processEscapes(tuple2._2)))
    .map{ t2 => (t2._1, actorsNames(t2._2))}
    .map{ t2 => (t2._1,Try(Json.parse(t2._2.get)))}
    .filter(_._2.isSuccess)
    .map(t2 => (t2._1, t2._2.get))
    .map(t2 => (t2._1, transform(t2._2)))
    .flatMap(t2 =>t2._2.map(name => (t2._1, name)))
    .distinct

    val f = new File( "C:/Users/Kevin/Desktop/Graficos/movie-cast.csv")
    val writer = CSVWriter.open(f)
    writer.writeAll(castId.map(_.productIterator.toList))
    writer.close()

    Class.forName("com.mysql.cj.jdbc.Driver")
    ConnectionPool.singleton("jdbc:mysql://localhost:3306/proyecto", "root", "1234")
    implicit val session = AutoSession

    castId.map(x =>
    sql"""
    |INSERT INTO casts(MOVIE_ID, NAME) VALUES (${x._1}, ${x._2})
    |""".stripMargin.update.apply()
    )
}
