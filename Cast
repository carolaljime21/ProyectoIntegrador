import play.api.libs.json._
import scala.util.{Failure, Success, Try}
import com.github.tototoshi.csv._
import java.io.File
import requests.Response
import scalikejdbc._
import GenerarSQL.escapeMysql

object Cast extends App {
  val reader = CSVReader.open(new File("src/movie_dataset.csv"))
  val data = reader.allWithHeaders()
  reader.close()

  def actorsNames(dataRaw: String): Option[String] = {
    val response: Response = requests
      .post("http://api.meaningcloud.com/topics-2.0",
        data = Map("key" -> "78bbf65e7c69ccc9771d31c9ce27fc8b",
          "lang" -> "en",
          "txt" -> dataRaw,
          "tt" -> "e"),
        headers = Map("content-type" -> "application/x-www-form-urlencoded"))
    Thread.sleep(500)
    if (response.statusCode == 200) {
      Option(response.text)
    } else
      Option.empty
  }

  def transform(jsValue : JsValue): List[String] =
    jsValue("entity_list").as[JsArray].value
    .map (_("form"))
    .map (_.as[String])
      .map(x => escapeMysql(x))
    .toList


    val list = data
    .map(row => (row("original_language"), row("production_companies")))
  val groupedCrew = list.groupBy(_._1)
  val crewWithMovieId = groupedCrew.flatMap { case (lan, crewList) =>
    val crew = crewList.map(_._2)
      .map(replacePattern2)
      .map(replacePattern)
      .map(replacePattern3)
      .map(text => text.replace("'", "\""))
      .map(text => text.replace("-u0027", "'"))
      .map(text => text.replace("-u0022", "\\\""))
      .map(text => Try(Json.parse(text)))
      .filter(_.isSuccess)
      .map(_.get)
      .flatMap(_.as[JsArray].value)
      .map(_.as[JsObject])
      .map(jsObj => (lan, jsObj("id").as[Int],
        escapeMysql(jsObj("name").as[String])))
    crew
  }.toList.distinct

  val f = new File("src/movie-companies.csv")
  val writer = CSVWriter.open(f)
  writer.writeAll(crewWithMovieId.map(c => List(c._1, c._2, c._3)).toList)
  writer.close()
}
